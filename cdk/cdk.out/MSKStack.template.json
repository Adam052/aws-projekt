{
 "Resources": {
  "MSKSecurityGroupB5009346": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for MSK cluster",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::ImportValue": "VPCStack:ExportsOutputFnGetAttIoTVPC8B2E4583CidrBlock7473E369"
      },
      "Description": "Allow inbound from EC2 plaintext",
      "FromPort": 9092,
      "IpProtocol": "tcp",
      "ToPort": 9092
     },
     {
      "CidrIp": {
       "Fn::ImportValue": "VPCStack:ExportsOutputFnGetAttIoTVPC8B2E4583CidrBlock7473E369"
      },
      "Description": "Allow inbound from EC2 TLS",
      "FromPort": 9094,
      "IpProtocol": "tcp",
      "ToPort": 9094
     },
     {
      "CidrIp": {
       "Fn::ImportValue": "VPCStack:ExportsOutputFnGetAttIoTVPC8B2E4583CidrBlock7473E369"
      },
      "Description": "Allow inbound from EC2 SASL",
      "FromPort": 9096,
      "IpProtocol": "tcp",
      "ToPort": 9096
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "MSK-SecurityGroup"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "VPCStack:ExportsOutputRefIoTVPC8B2E45835BD75DDA"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MSKStack/MSKSecurityGroup/Resource"
   }
  },
  "MSKCluster4E6A46C2": {
   "Type": "AWS::MSK::Cluster",
   "Properties": {
    "BrokerNodeGroupInfo": {
     "ClientSubnets": [
      {
       "Fn::ImportValue": "VPCStack:ExportsOutputRefIoTVPCPrivateSubnet1Subnet93560337C621C750"
      },
      {
       "Fn::ImportValue": "VPCStack:ExportsOutputRefIoTVPCPrivateSubnet2Subnet857821200B67304C"
      }
     ],
     "InstanceType": "kafka.t3.small",
     "SecurityGroups": [
      {
       "Fn::GetAtt": [
        "MSKSecurityGroupB5009346",
        "GroupId"
       ]
      }
     ],
     "StorageInfo": {
      "EBSStorageInfo": {
       "VolumeSize": 1000
      }
     }
    },
    "ClusterName": "msk-mskstack",
    "EncryptionInfo": {
     "EncryptionInTransit": {
      "ClientBroker": "TLS",
      "InCluster": true
     }
    },
    "KafkaVersion": "2.8.1",
    "LoggingInfo": {
     "BrokerLogs": {
      "CloudWatchLogs": {
       "Enabled": false
      },
      "Firehose": {
       "Enabled": false
      },
      "S3": {
       "Enabled": false
      }
     }
    },
    "NumberOfBrokerNodes": 4
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MSKStack/MSKCluster/Resource"
   }
  },
  "MSKClusterBootstrapBrokersBootstrapBrokerStringTls38B7EB83": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"Kafka\",\"action\":\"getBootstrapBrokers\",\"parameters\":{\"ClusterArn\":\"",
       {
        "Ref": "MSKCluster4E6A46C2"
       },
       "\"},\"physicalResourceId\":{\"id\":\"BootstrapBrokers\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"Kafka\",\"action\":\"getBootstrapBrokers\",\"parameters\":{\"ClusterArn\":\"",
       {
        "Ref": "MSKCluster4E6A46C2"
       },
       "\"},\"physicalResourceId\":{\"id\":\"BootstrapBrokers\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "MSKClusterBootstrapBrokersBootstrapBrokerStringTlsCustomResourcePolicyD51836A8"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MSKStack/MSKCluster/BootstrapBrokersBootstrapBrokerStringTls/Resource/Default"
   }
  },
  "MSKClusterBootstrapBrokersBootstrapBrokerStringTlsCustomResourcePolicyD51836A8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "kafka:GetBootstrapBrokers",
       "Effect": "Allow",
       "Resource": {
        "Ref": "MSKCluster4E6A46C2"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MSKClusterBootstrapBrokersBootstrapBrokerStringTlsCustomResourcePolicyD51836A8",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSKStack/MSKCluster/BootstrapBrokersBootstrapBrokerStringTls/CustomResourcePolicy/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MSKStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-412381744865-eu-central-1",
     "S3Key": "4cd2f2411231aa073e609dc99a49b5c5e974252bf9abf0f9350d237d17cce8be.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "MSKStack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.4cd2f2411231aa073e609dc99a49b5c5e974252bf9abf0f9350d237d17cce8be",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11QS27CMBA9S/bOEJINy5ZIZVmUHiAyxgU3/kSesVAU5e6MaUBqV+83Hvu5hu2ugrkq5A1LdR5Ka04wf5FUg2Crn7WqWWuVoqHpEEMaRfvt/xiLcDgAu61NSDoKK93pLPmY8RerKfiP5BWZ4MWL8PSTL8JIB/MxWKOmHKysC1ZnmXER2PQSURPCewbWsE9q0LSXyLHim4Pro8aQotI8dcP24XWrJf5L3vzkL/LYze0v/PI88ZloTLSIqpR2vEqoirf1ozYZufcarNUXcZzoGvymgW0NTfGDxpQxeTJOQ/eLd0KFcKhzAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "MSKStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "MSKClusterArn": {
   "Description": "ARN klastra MSK",
   "Value": {
    "Ref": "MSKCluster4E6A46C2"
   }
  },
  "MSKBootstrapBrokers": {
   "Description": "Bootstrap brokers MSK (TLS)",
   "Value": {
    "Fn::GetAtt": [
     "MSKClusterBootstrapBrokersBootstrapBrokerStringTls38B7EB83",
     "BootstrapBrokerStringTls"
    ]
   }
  },
  "BootstrapBrokersTls": {
   "Description": "MSK Bootstrap Brokers TLS",
   "Value": {
    "Fn::GetAtt": [
     "MSKClusterBootstrapBrokersBootstrapBrokerStringTls38B7EB83",
     "BootstrapBrokerStringTls"
    ]
   }
  },
  "ExportsOutputFnGetAttMSKSecurityGroupB5009346GroupIdBBBA6F75": {
   "Value": {
    "Fn::GetAtt": [
     "MSKSecurityGroupB5009346",
     "GroupId"
    ]
   },
   "Export": {
    "Name": "MSKStack:ExportsOutputFnGetAttMSKSecurityGroupB5009346GroupIdBBBA6F75"
   }
  },
  "ExportsOutputFnGetAttMSKClusterBootstrapBrokersBootstrapBrokerStringTls38B7EB83BootstrapBrokerStringTls00DE15EC": {
   "Value": {
    "Fn::GetAtt": [
     "MSKClusterBootstrapBrokersBootstrapBrokerStringTls38B7EB83",
     "BootstrapBrokerStringTls"
    ]
   },
   "Export": {
    "Name": "MSKStack:ExportsOutputFnGetAttMSKClusterBootstrapBrokersBootstrapBrokerStringTls38B7EB83BootstrapBrokerStringTls00DE15EC"
   }
  },
  "ExportsOutputRefMSKCluster4E6A46C2CDCE4B06": {
   "Value": {
    "Ref": "MSKCluster4E6A46C2"
   },
   "Export": {
    "Name": "MSKStack:ExportsOutputRefMSKCluster4E6A46C2CDCE4B06"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}